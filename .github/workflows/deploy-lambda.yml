name: Deploy Lambda Function with API Gateway

on:
  push:
    branches: [main]  # Trigger the workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install zip tool
        uses: montudor/action-zip@v1

      - name: Create Zip file for Lambda function
        run: zip -r code.zip .

      - name: Deploy Lambda function
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: "lambda update-function-code \
            --function-name arn:aws:lambda:ap-south-1:899920141210:function:fastapi-onboarding \
            --zip-file fileb://code.zip"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Create or update API Gateway
        run: |
          # Create or update the API Gateway
          aws apigateway create-rest-api --name 'FastAPI-Onboarding-API' --region ${{ secrets.AWS_REGION }} || echo "API already exists"

          # Fetch the REST API ID and root resource ID
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='FastAPI-Onboarding-API'].id" --output text)
          ROOT_RESOURCE_ID=$(aws apigateway get-resources --rest-api-id $API_ID --query "items[0].id" --output text)

          # Create a new POST method on the root resource
          aws apigateway put-method --rest-api-id $API_ID --resource-id $ROOT_RESOURCE_ID --http-method POST --authorization-type NONE --region ${{ secrets.AWS_REGION }}

          # Integrate Lambda with the POST method
          aws apigateway put-integration --rest-api-id $API_ID --resource-id $ROOT_RESOURCE_ID --http-method POST --integration-http-method POST --type AWS_PROXY --uri arn:aws:apigateway:${{ secrets.AWS_REGION }}:lambda:path/2015-03-31/functions/arn:aws:lambda:${{ secrets.AWS_REGION }}:899920141210:function:fastapi-onboarding/invocations --region ${{ secrets.AWS_REGION }}

          # Deploy the API to a stage
          aws apigateway create-deployment --rest-api-id $API_ID --stage-name prod --region ${{ secrets.AWS_REGION }}

          # Generate the correct sourceArn
          STAGE_NAME="prod"
          SOURCE_ARN="arn:aws:execute-api:ap-south-1:899920141210:gcf48xxn33/*/POST/"

          # Grant API Gateway permission to invoke Lambda
          aws lambda add-permission \
            --function-name fastapi-onboarding \
            --statement-id apigateway-invoke \
            --action lambda:InvokeFunction \
            --principal apigateway.amazonaws.com \
            --source-arn "$SOURCE_ARN"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
